Perfect. I’ll research all 11 esports titles approved by the OCA for the Aichi-Nagoya Asian Games, covering gameplay mechanics, pro and ranked player metrics, scouting KPIs, AI training opportunities, and useful data structures. I’ll also suggest tailored data models (JSON/YAML style) and app integration recommendations that align with the features in your EsportsAiScout app.

I’ll let you know once it’s ready for review.

# Esports Title Profiles – Aichi-Nagoya Asian Games 2026

The following profiles detail each of the Olympic Council of Asia (OCA) approved esports titles for the 2026 Aichi-Nagoya Asian Games. Each section covers core gameplay, key performance metrics (for ranked play and professional competition), scouting insights for talent evaluation, potential AI integration in training/analysis, a sample data schema for player/match data, and how specific app features (StrategyRecommendation, PlayerCard, AIInsights, PerformanceChart) can be tailored to the game’s unique characteristics. 

## Street Fighter Series  
### Core Gameplay Overview  
Street Fighter is a classic 2D fighting game franchise where two players engage in one-on-one combat using a variety of punches, kicks, and special moves to deplete the opponent’s life bar ([Street Fighter V - Wikipedia](https://en.wikipedia.org/wiki/Street_Fighter_V#:~:text=Street%20Fighter%20V%20carries%20on,75%20can%20parry%20an)). Matches are typically decided in best-of-rounds format (e.g. first to two round wins). Players select from a roster of characters, each with unique fighting styles and combos. The gameplay emphasizes spacing (“footsies”), timing, and executing combos or special attacks (like Ryu’s Hadouken fireball or Chun-Li’s Lightning Kick) to overwhelm the opponent. Meter management is also crucial – modern titles (e.g. *Street Fighter V* and *VI*) include super gauges that build up to unleash powerful Critical Arts or V-Triggers that can turn the tide of battle ([Street Fighter V - Wikipedia](https://en.wikipedia.org/wiki/Street_Fighter_V#:~:text=their%20opponent,use%20a%20section%20of%20the)). High-level play revolves around reading the opponent’s moves, performing precise **frame-perfect** inputs, and strategically using defenses (blocks, parries) and counter-attacks.

### Player Performance KPIs (Ranked & Pro)  
- **Ranked KPIs:** In ranked online play, a player’s **League Points (LP)** and rank tier indicate performance. For example, in *Street Fighter V* players gain/lose LP from matches, climbing from Rookie through Bronze, Silver, Gold, up to Warlord rank based on their points ([Street Fighter V/Ranking List | Street Fighter Wiki | Fandom](https://streetfighter.fandom.com/wiki/Street_Fighter_V/Ranking_List#:~:text=In%20Street%20Fighter%20V%2C%20a,player%20has%20determines%20their%20rank)) ([Street Fighter V/Ranking List | Street Fighter Wiki | Fandom](https://streetfighter.fandom.com/wiki/Street_Fighter_V/Ranking_List#:~:text=Ultra%20Platinum%20%2012001,LP%20Warlord%20%20300000%2B%20LP)). **Win rate** (percentage of matches won) is a basic indicator of success. Other stats include average **rounds won per match** and **win streaks**. Execution metrics like **combo completion rate** (how often the player successfully lands full combos without dropping) and **attack accuracy** (ratio of hits to total attacks attempted) can also be tracked. For instance, a high-ranked player might consistently land their combos under pressure, reflected in a high combo success percentage.  
- **Pro KPIs:** At the professional level, win rate is considered across tournament sets, and deeper analytics come into play. **Round win differential** (rounds won vs lost against top opponents), **damage per round** (average damage dealt before a round ends), and **comeback rate** (wins after losing the first round) are insightful. Key fighting game-specific KPIs are measured, such as **reaction time** (e.g. how quickly a player punishes an unsafe move – top players often react within ~15 frames), **throw tech success** (percentage of opponent throws successfully countered), and **anti-air success rate** (how often jump-in attacks are countered). A pro player’s **tournament character roster** (effective characters used) and **matchup spread** (win rates against various characters) are also performance indicators. For example, a pro may have an 80% win rate with their main character and demonstrate sub-200ms reactions in punishing attacks – metrics that separate them from average ranked players.

### Scouting Insights & Skill Signals  
Scouting for fighting game talent involves looking beyond raw win rates. **Execution precision** is a major signal: consistency in pulling off difficult combos or special move inputs under pressure (e.g. hitting one-frame links or “just frame” moves) shows technical prowess. **Reaction speed** is critical – a player who can reliably anti-air jump attacks or block mix-ups on reaction is exhibiting a high skill ceiling (fast reactions can be observed by how often they block overheads or tech throws in the first 10 frames of vulnerability). **Adaptability and mind games** are also key signals: top players will download opponent tendencies over a set, adjusting strategies mid-match. Scouts watch for players who, for example, lose a first game but then counter the opponent’s style in subsequent games – indicating strong analytical skill. **Footsies and spacing** control is another tell: the ability to control the ground game, whiff-punish the opponent’s normals, and maintain optimal distance reflects advanced understanding. High-level prospects often demonstrate efficient **meter management** (using their super gauge at opportune moments, not wasting resources). In measurable terms, a scout might note a player’s **combo conversion rate** – how often a landed hit leads to a full combo (a high conversion rate means the player capitalizes on every opening, a hallmark of pro-level play). Another signal is **defensive prowess**, seen in stats like low average damage taken per round or high reversal success (using invincible “DP” moves or V-Shift escapes effectively). These nuanced skill signals (reaction time, spatial control, combo accuracy, adaptive play) can feed AI models that project a player’s potential.

### AI Integration Opportunities  
AI can be woven into Street Fighter training and analysis in several ways. **Predictive modeling** can be used to analyze player habits and predict outcomes – for instance, an AI trained on thousands of match replays could predict how likely a player is to win a specific matchup (Ryu vs Chun-Li, etc.) based on their past performance metrics and even suggest optimal strategies. In real-time, an AI “coach” could offer **strategy feedback** between rounds: e.g. informing a player that “Opponent blocks low 80% of the time on wakeup – try a surprise overhead,” using pattern recognition on the opponent’s behavior. Another integration is **training simulations**: an AI-driven sparring partner could mimic the style of known top players or exploit a trainee’s specific weaknesses. For example, if the player struggles against grapplers, an AI Zangief bot could be tuned to use command throws intelligently, helping the player practice counter-play in a safe environment. AI can also assist in **frame data analysis** – automatically parsing game frame data to identify which moves the player fails to punish and then highlighting those moments in replay. Additionally, computer vision and machine learning techniques can track a player’s **reaction time** over matches and provide a quantified trend. Overall, AI can act as a personalized coach: digesting match data, flagging missed opportunities (e.g. “you missed 5 anti-air opportunities this set”), and even recommending character-specific combos or tactics to practice based on the player’s performance stats.

### Example Data Schema (Player & Match Data)  
Below is a sample JSON schema capturing key data from a Street Fighter match, suitable for a scouting or training dashboard. It logs per-player stats for the match and round-by-round details:  

```json
{
  "match_id": "SF-Aichi-QF1-0001",
  "game": "Street Fighter 6",
  "stage": "Training Room",
  "players": [
    {
      "player_id": "PlayerA",
      "character": "Ryu",
      "win": true,
      "rounds_won": 2,
      "rounds_lost": 1,
      "combo_completion_rate": 0.88,
      "avg_damage_per_round": 320,
      "anti_air_success": 4,
      "throw_techs": 2,
      "inputs_per_second": 3.5
    },
    {
      "player_id": "PlayerB",
      "character": "Chun-Li",
      "win": false,
      "rounds_won": 1,
      "rounds_lost": 2,
      "combo_completion_rate": 0.75,
      "avg_damage_per_round": 290,
      "anti_air_success": 1,
      "throw_techs": 1,
      "inputs_per_second": 3.1
    }
  ],
  "round_stats": [
    {
      "round": 1,
      "winner": "PlayerB",
      "duration_seconds": 45,
      "PlayerA_health_left": 0,
      "PlayerB_health_left": 120,
      "first_hit_by": "PlayerA",
      "critical_art_used": false
    },
    {
      "round": 2,
      "winner": "PlayerA",
      "duration_seconds": 38,
      "PlayerA_health_left": 200,
      "PlayerB_health_left": 0,
      "first_hit_by": "PlayerB",
      "critical_art_used": true
    },
    {
      "round": 3,
      "winner": "PlayerA",
      "duration_seconds": 50,
      "PlayerA_health_left": 100,
      "PlayerB_health_left": 0,
      "first_hit_by": "PlayerA",
      "critical_art_used": false
    }
  ]
}
```  

This schema includes identifiable info (`match_id`, characters, outcome), performance metrics per player (combo rate, anti-airs, etc.), and even round-by-round breakdowns. Such structured data can power the AI insights and visualization features in a dashboard.

### Tailoring App Features  
- **StrategyRecommendation:** For Street Fighter, strategy recommendations should focus on matchup-specific and playstyle-specific advice. The app’s AI could analyze a user’s replay data to suggest things like “Use more anti-air Shoryukens against jump-happy opponents” or “Your opponent tends to wake-up with buttons – try meaty attacks.” Because fighting games are highly situational, the recommendations can even surface frame data tips (“Chun-Li’s Spinning Bird Kick is -2 on block – take back your turn after blocking it”). Essentially, the feature becomes a virtual coach that suggests training drills (e.g. practice punishing a certain move in training mode) and real-match tactics tailored to the player’s weaknesses.  
- **PlayerCard:** A Street Fighter player’s profile should highlight their preferred character(s), rank, and key stats that define their style. For example, the PlayerCard might show **Main Character: Ryu (80% usage)**, **Global Rank: Diamond**, **Win Rate: 67%**, **Average Combo Damage: 250**, **Throw Tech Rate: 75%**. It could also include a radar chart of attributes like Aggression (attack frequency), Defense (blocks/techs), Execution (combo success), and Adaptability (win % in long sets). This gives a quick snapshot of the player’s strengths – e.g. a player might have high Execution but lower Defense, suggesting an offensive-minded style.  
- **AIInsights:** The AI Insights panel can deliver nuanced analysis after each set or tournament. For a Street Fighter player, it might note trends such as *“Your reaction time on anti-airs was slower than pro average, leading to 3 jump-in attacks from opponents hitting you”*, or *“You won 80% of rounds where you landed a combo of 5 hits or more – focus on maximizing those opportunities.”* It can highlight frequently used moves (and whether they’re effective: e.g. *“Hadouken used 30 times, 20% hit rate”* might imply predictability). Another insight might compare the player’s use of mechanics to pro players: *“You utilize the Drive Parry 10% of the time versus 25% by top players”*, flagging underused defensive tools. These insights, backed by data and even visualized with small charts or replay clips, help players identify exactly where to improve.  
- **PerformanceChart:** The app can visualize the player’s match performance over time or within a match. For Street Fighter, a round timeline chart could show health values for both fighters over each second of the round, highlighting turning points (e.g. big combos or critical Arts). Another useful chart is a **damage distribution chart** – how much damage the player dealt via normals vs specials vs throws. A **radar/spider chart** could compare the player’s core attributes to a benchmark (e.g. Player’s speed, power, defense, technique vs a pro’s values). If the player tends to lose via timeout often, a chart might show “damage dealt per round vs time remaining,” revealing slow pace. The PerformanceChart feature basically needs to convey at a glance where the player excels or falls behind: for instance, a bar graph could compare average combo count per match of the player vs the tournament average. For a game as fast and technical as Street Fighter, clear and concise visualizations of hit ratios, damage bursts, and mistake frequencies (like dropped combos) will help the player digest the information quickly and track progress as they train.

---

## Tekken Series  
### Core Gameplay Overview  
Tekken is a 3D fighting game series known for its arena-based duels and emphasis on fluid martial arts combat. Two competitors face off using punches, kicks, and intricate combo strings to reduce each other’s life bars, similar to 2D fighters, but Tekken introduces sidestepping and full 3D movement. Fights are typically best-of-3 rounds, with the winner being the first to KO the opponent in each round. Players choose from a large character roster (e.g. Jin, Paul, King), each with unique move sets often 100+ moves deep. Gameplay revolves around **juggle combos** – launching an opponent into the air and following up with successive hits – and **whiff punishment** – capitalizing on missed attacks by the opponent. Tekken’s mechanics include features like **Rage** (when health is low, characters gain damage boost and access to a **Rage Art** super move) and **Power Crush** (armor through hits at the cost of damage) ([Tekken 7 — StrategyWiki | Strategy guide and game reference wiki](https://strategywiki.org/wiki/Tekken_7#:~:text=Tekken%207%20focuses%20on%20one,increase%20opportunity%20for%20additional%20hits)). Movement is a defining aspect: advanced players utilize backdash cancels (e.g. the “Korean backdash”) and sidesteps to create spacing or evade linear attacks. The goal, as with most fighters, is to **deplete the opponent’s health bar**, but rounds can also end via time-out with the healthier player winning. Overall, Tekken’s core is a **high-speed chess match of reads, execution, and spatial control** in a 3D space, with complex combo systems and rich character-specific techniques.

### Player Performance KPIs (Ranked & Pro)  
- **Ranked KPIs:** Tekken’s online ranking system assigns titles from beginner ranks (e.g. 9th Kyu) up to top ranks (such as *Tekken God Prime*). Players climb by accumulating rank points through wins. A key KPI is the **win-loss record** at each rank – for instance, a player might maintain a 60% win rate in the “Genbu” rank bracket. **Promotion rate** (how quickly one advances through ranks) can indicate skill. The game also tracks **character-specific rank** (each character has its own rank for a player), so a versatile player may have multiple characters at high rank. Besides rank, other metrics include **average combo damage** (how much damage on average the player deals in a combo – higher indicates better juggle optimization) and **throw break percentage** (how often the player breaks opponent throws, reflecting reaction and knowledge). **Hit ratio** of various move types is another stat (for example, the percentage of launched attacks that successfully hit and lead to a juggle). In ranked play, consistency matters – metrics like **streaks** (win streak or loss streak) and **round win percentage** help differentiate those climbing steadily versus struggling.  
- **Pro KPIs:** In competitive Tekken, beyond simply win rate, analysts look at **round win percentage against high-tier opponents**, **tournament placement consistency**, and **clutch factor** (percentage of wins in final-round situations). Detailed stats are gathered such as **average combo count** (number of hits per combo and success rate of executing max-damage combos). **Damage per launch** is a key stat: given a launch, how much damage does the player typically convert – top players squeeze very high damage out of each opportunity. **Movement and defense metrics** are also telling: e.g. **backdash distance** (how effectively a player creates space – can be qualitative) and **block/punish rates** (how often a player blocks enemy launchers and responds with an optimal punish). Tekken being rich in mix-ups, **low-parry frequency** (how often a player successfully low-parries an incoming low attack) is a skill indicator. Another KPI: **perfect rounds ratio** (rounds won with full health remaining) which indicates dominance in some matches. Professional match stat tracking might include **throw usage vs break rate** and **counter-hit ratio** (the proportion of the player’s hits that are counter-hits, which often lead to additional combos in Tekken’s system). Taken together, these KPIs illustrate a player’s style – e.g. a player with very high counter-hit ratio and lower throw usage is aggressively looking for counter-hit launches, whereas another with high throw attempts and moderate damage per combo might rely on throw mix-ups and simpler combos.

### Scouting Insights & Skill Signals  
Scouting Tekken talent involves evaluating both technical execution and strategic depth. **Movement mastery** is paramount – a strong prospect will exhibit smooth backdash cancels and confident sidestepping, minimizing how often they get hit by linear attacks. You can gauge this by observing how often they bait whiffs and create space; a scouting metric might be “opponent whiff count per round induced by player” – high for those with excellent movement. **Combo execution and optimization** is another signal: does the player consistently perform the most damaging combo for a given launch (indicating they’ve practiced and can execute under pressure)? If a player rarely drops combos and always carries to the wall for extra damage, that’s a big green flag. **Situational awareness** in Tekken can be seen in how a player handles wall scenarios – good players use the wall for extended damage or break through balcony/ground breaks optimally. A scout might note a player’s **wall conversion rate** (how often they convert a hit into a wall combo when near a wall). **Defensive reads** are equally important: players who often **chicken** (counter) reversal attempts or break throws consistently show high-level knowledge. Reaction-based skills like breaking throws on reaction or low-parrying fast lows (like a 20-frame snake edge) indicate exceptional reflexes. Additionally, mental resilience and adaptation – if a player gets blown up by a certain string or setup in one round but finds a solution by the next, it shows adaptability. This can be signaled by **comeback statistics** (e.g. percentage of matches won after losing the first game). Another insight: **character diversity** – a scout might value a player who can use multiple characters effectively (signaling broader game knowledge), or conversely a specialist with an unusual character (which could catch opponents off-guard). In summary, signals like **excellent movement (high evasion, whiff punish count)**, **max-damage combos, high execution**, **strong defensive options (throw breaks, low parries)**, and **smart adaptation** are what scouts look for, many of which can be quantified through game data.

### AI Integration Opportunities  
AI can assist Tekken players by serving as an ever-adapting sparring partner and an analytic coach. One opportunity is **AI-driven matchup analysis**: given Tekken’s large roster, an AI could ingest thousands of high-level match replays and identify patterns like “Asuka players often use parry after 2 blocked jabs” or “Lee tends to sidestep right – favor tracking moves to the right side.” This information could be fed to users as actionable insights for each matchup. Another integration is using AI for **combo training and discovery** – by brute-forcing through a character’s move list, an AI could potentially find new optimized combos or tech traps which human players haven’t discovered, acting as a lab assistant. For gameplay coaching, a **real-time AI advisor** could watch a live match and, between rounds, suggest adjustments: for example, “Opponent ducked under your high 6 times – incorporate some mid launchers.” Even more immediate, a **VR or ghost AI** could simulate common scenarios (like defending against King’s multi-throw chain) to let players practice with dynamic feedback (“you broke 3 out of 5 throw attempts – try to improve timing”). AI can also provide **frame-perfect punish training**: it can perform a certain unsafe move repeatedly, varying timing, to drill the player on punishing within the small window. On the analytics side, AI pattern recognition can highlight things a human coach might miss, such as the player being sidestepped more often to one direction – prompting an insight that the player favors moves that track poorly in that direction. Additionally, advanced machine learning could be used to predict which player will win a match after a few rounds by recognizing subtle momentum shifts and then provide post-match analysis explaining why (e.g. “The model noticed you stopped using low pokes after being low parried – this allowed your opponent to defend high comfortably”). In training simulation, one could even envision an AI “clone” of the player that exploits their known weaknesses, forcing them to confront and fix those habits. 

### Example Data Schema (Player & Match Data)  
```json
{
  "match_id": "Tekken7_WB_SemiFinal_02",
  "players": [
    {
      "player_name": "ArslanAsh",
      "character": "Zafina",
      "inputs_per_second": 2.8,
      "throw_break_percent": 0.80,
      "low_parry_count": 4,
      "avg_combo_damage": 68,
      "wall_combo_count": 3,
      "win": true,
      "rounds_won": 3,
      "rounds_lost": 1
    },
    {
      "player_name": "Knee",
      "character": "Feng",
      "inputs_per_second": 3.1,
      "throw_break_percent": 0.50,
      "low_parry_count": 2,
      "avg_combo_damage": 55,
      "wall_combo_count": 1,
      "win": false,
      "rounds_won": 1,
      "rounds_lost": 3
    }
  ],
  "round_history": [
    {
      "round": 1,
      "winner": "Knee",
      "winning_move": "Shoulder (wall splat)",
      "time_left_seconds": 10,
      "player_states": {
        "ArslanAsh": {"health_end": 0, "rage_used": false},
        "Knee": {"health_end": 45, "rage_used": false}
      }
    },
    {
      "round": 2,
      "winner": "ArslanAsh",
      "winning_move": "Rage Drive launcher",
      "time_left_seconds": 22,
      "player_states": {
        "ArslanAsh": {"health_end": 30, "rage_used": true},
        "Knee": {"health_end": 0, "rage_used": false}
      }
    },
    {
      "round": 3,
      "winner": "ArslanAsh",
      "winning_move": "low poke (time out win)",
      "time_left_seconds": 0,
      "player_states": {
        "ArslanAsh": {"health_end": 80, "rage_used": false},
        "Knee": {"health_end": 20, "rage_used": true}
      }
    },
    {
      "round": 4,
      "winner": "ArslanAsh",
      "winning_move": "13-hit wall combo",
      "time_left_seconds": 18,
      "player_states": {
        "ArslanAsh": {"health_end": 50, "rage_used": false},
        "Knee": {"health_end": 0, "rage_used": false}
      }
    }
  ]
}
```  

In this schema, we capture key per-player stats (throw breaks, low parries, etc.), as well as a history of each round with details like how it was won and remaining time. This structure supports analysis like identifying how often **Rage** was used effectively or how many rounds went to timeout, which can feed scouting reports and AI recommendations.

### Tailoring App Features  
- **StrategyRecommendation:** For Tekken, strategy tips should be highly matchup and even stage-specific. The app can suggest counter-measures against frequently used moves: e.g. *“Law’s Dragon Tail low hit you 5 times – consider low-parrying when you see it coming.”* If the player struggles with movement, a recommendation might be *“Use sidestep right against this opponent’s Mishima characters to evade their left sided moves.”* Given Tekken’s depth, the feature can also propose practice regimens, like *“Practice wall combos: you dropped 2 opportunities to extend combo damage at the wall.”* For each character the user plays, the StrategyRecommendation could maintain a knowledge base of known weaknesses and optimal tactics (sourced from community or AI analysis). For example, *“As Eddy, avoid using low launcher from max range against this opponent – they have demonstrated they can block and launch-punish it.”* Essentially, the app should act as a **Tekken coach**, pointing out tactical adjustments (punish opportunities, throw mix-up suggestions, spacing adjustments) and training focus areas.  
- **PlayerCard:** A Tekken PlayerCard would present an overview of the player’s statistics and character specialties. It should list their **Highest Rank Achieved** (e.g. Tekken God Omega) and **Main Characters** (with win rates for each). Key stats to display: **Win Rate**, **Average Combo Damage**, **Preferred Combo Length** (some players do shorter consistent combos vs risk longer ones), **Throw Break %**, and **Low Parry %**. It might also show a breakdown like *Aggressiveness* (measured by how often they initiate attacks vs block), *Defensive Success* (percentage of opponent attacks blocked or avoided), and *Tech Rate* (covering things like tech-rolling knockdowns or breaking throws). An interesting addition could be a small visual of their **heatmap on stage** – though Tekken stages aren’t huge, one could show how often they maneuver towards walls or stay center. The PlayerCard gives a quick profile: for instance, *“PlayerA – Main: King (70% win), Secondary: Paul (55% win). Aggressive grappler, 60% throw break, High wall damage.”* This allows scouts or other players to quickly understand who they’re dealing with.  
- **AIInsights:** In Tekken, the AIInsights can be very granular. After analyzing a set, the AI might report: *“You landed 12 launchers but only converted 8 into full combos – potential damage left on the table: ~80 HP total. Aim to improve combo consistency.”* It can highlight **escape patterns** (e.g. *“When back to wall, you sidestep left 90% of the time – opponents may exploit this.”*) or **punishment gaps** (e.g. *“Missed punishing Jin’s f+4 which is -10; utilize quick jabs to punish these minor negatives.”*). Another insight might focus on **tempo**: *“Rounds you won ended in average 20 seconds vs rounds lost in 40+ seconds – you perform better in fast-paced scenarios, consider pushing the offense.”* If the player fights multiple characters, the AI might notice *“Struggle against fast characters: win rate 40% vs Xiaoyu/Yoshi type, vs 65% against defensive characters.”* AIInsights could even compare the player to a known pro baseline: *“Your throw break rate (50%) is below pro average (70%) – dedicating practice to throw reacting could boost your defense.”*. For a game like Tekken where many small factors add up, these targeted data-driven insights are invaluable for guiding improvement.  
- **PerformanceChart:** Tekken matches have a lot to unpack, and charts can help. A **timeline chart** per round could plot each player’s health over time, clearly marking big momentum shifts (e.g. large combo at 10-second mark). We could overlay indicators for each launcher and combo sequence. Another useful chart is a **move frequency pie chart** – showing the top 5 moves the player used and their success rates (hit / blocked / whiffed). Similarly, a chart for **damage sources** might break down total damage dealt via combos, pokes, throws, and counter-hits. The PerformanceChart feature can also visualize **round outcomes**: a bar chart might show how many rounds were won by timeout, by KO, or by perfect. A specialized chart could depict **punishment efficiency** – for example, a table or histogram of common enemy moves that went unpunished vs punished. Additionally, since Tekken involves spatial elements, a simple bar showing “Wall Damage vs Open Ground Damage” could be enlightening (did the player maximize wall combos?). The PerformanceChart’s goal is to translate the detailed match data into digestible visuals that quickly tell the story: e.g. a chart might reveal *“Player’s damage spike comes early in rounds (aggressive start) but falls off in late round (perhaps due to caution or opponent adaptation).”* With such charts, a player can literally see their match flow and adjust strategy accordingly.

---

## King of Fighters Series  
### Core Gameplay Overview  
The King of Fighters (KoF) is a 2D fighting game series distinguished by its **3v3 team battle format**. Instead of one character per player, each player selects a team of three characters before the match. During a match, it plays out as a series of 1v1 rounds: when one character is defeated, the next character in that team comes in to fight the still-standing character of the opposing team ([BACK TO THE PAST: Fighters unleashed - DAWN.COM](https://www.dawn.com/news/884414/back-to-the-past-fighters-unleashed#:~:text=,could%20end%20in%20six%20rounds)). This continues until one team’s three fighters are all defeated. There are no tag mechanics in classic KoF (unlike games where you can switch mid-round) – it’s an elimination format, often called “team relay.” Rounds are contiguous, meaning the winner of a round carries over their remaining health to fight the next opponent (with a small health recovery between rounds as a bonus). KoF’s gameplay is fast-paced and offensively oriented, with mechanics like **short hops and hyper hops** (quick, low jumps to apply pressure) and **rolling** (a forward dodge with temporary invincibility) to evade attacks or advance. Each character has special moves and super moves, and players manage a power gauge to perform **Desperation Moves (Supers)** or **MAX mode combos**. The objective, ultimately, is to **eliminate all three of the opponent’s characters**. KoF matches tend to emphasize rushdown offense, intricate combos (including MAX mode cancel combos in modern titles), and tight defense given the relentless pressure possible. The team aspect adds a strategic layer in team order selection and conserving character health across battles. Competitive KoF (e.g. *KoF XIV* or *KoF XV*) is known for its high execution bar and mind games due to the team dynamic.

### Player Performance KPIs (Ranked & Pro)  
- **Ranked KPIs:** In online KoF play (as seen in KoF XIV or XV), players often have **ELO or point-based ratings** that determine their rank tier. A fundamental KPI is the player’s **rank points** and their win rate in ranked matches. Because KoF uses teams, one interesting KPI is **character win rates** – which characters on the player’s team secure the most victories. For example, a player might win 70% of games where their last anchor character clutches the win, indicating strong performance under pressure. **Survival rate per character** is another metric: how often does their first character defeat multiple opponents, or conversely, how often do they get OCV’d (One Character Victory, where a single opposing character beats all three of theirs). A high OCV count against them might point to consistency issues. **Combo execution stats** can be tracked such as average combo length or damage (KoF combos can be long and high-damage with MAX mode). If the game provides a “max combo” statistic, that’s a nice KPI too. Additionally, **gauge utilization** – how effectively the player uses their super meter (e.g. average unused meter at end of rounds) – can be a measure of resource management. **Win rate by team order** can also be relevant if the player experiments with different orders; maybe they have a 60% win rate when Character X is anchor versus 45% when X is point (first), indicating a preferred strategy.  
- **Pro KPIs:** At the professional level, one looks at metrics like **match win rate** and **tournament win rate** (the latter being percentage of tournaments where the player at least reaches top 8 or wins). Because pro matches often involve adaptation in long sets, **reverse OCVs** (coming back to win after being down to last character vs 3) could be a metric demonstrating clutch ability. **Damage per touch** is high in KoF, so measuring the **average damage per opening** (how much on average the player deals when they land a clean hit) indicates how optimal their combos are – top KoF players often convert every hit into 50%+ damage. **Character usage diversity** is another KPI: many KoF pros have deep rosters; tracking win percentages across different team compositions shows versatility. Stats like **guard gauge breaks inflicted** (how often they pressure an opponent into guard crush) and **throws landed per match** give insight into offensive mix-up success. On defense, **times guard crushed** (how often their own guard is broken) and **successful rolls/evades** out of pressure might be logged. Another high-level KPI is **first character efficiency** – how many opponent characters does their point character typically defeat. For example, if on average the first character kills 1.5 opponents, that’s strong efficiency. **Comeback rate** with the last character (how often the anchor wins the entire match when coming in at a deficit) is a telling stat for mental fortitude and anchor character strength. Essentially, beyond wins, KoF pro KPIs delve into how well the player manages their team across the match: how much value each character provides and how they use meter resources, since meter carries over and is a pivotal part of KoF strategy.

### Scouting Insights & Skill Signals  
Scouting in KoF focuses on both **individual character skill** and **team strategy acumen**. A prime skill signal is **team composition mastery** – a strong player not only is great at their characters’ execution but also smart in team order and synergy. Scouts will look if the player arranges their team to cover weaknesses (for example, using a battery character first to build meter, a versatile mid, and a heavy damage anchor to spend meter) and adjusts order based on matchups. On the execution side, KoF is infamous for difficult inputs (like short hop timing, MAX mode cancels), so a clear signal is **fluid combo execution under pressure**. If a player consistently lands max-damage HD combos or tricky juggle sequences in tournaments, it shows top-tier execution. **Pressure and rushdown effectiveness** is huge – does the player consistently keep opponents in block stun with hop attacks and frame traps without overextending? A metric for this could be average **guard pressure time** (time keeping opponent in a defensive state) or how often they score a **guard crush**. **Defense in KoF** is equally challenging; being able to **anti-air short hops** reliably (which have very tight windows) is a hallmark of great players. So a scout might record how many hop attacks the player cleanly anti-aired versus how many they got hit by – a high success rate is a green flag. **Adaptability** in long sets is another insight: KoF rounds and matches can swing wildly, so a player who can adapt their playstyle when one character fails (e.g. switching to a more defensive approach with their anchor after aggressive style didn’t work for first two characters) shows high gamesense. **Resource management** is a subtle but crucial skill: a scout will watch if the player wastes meter on risky moves or holds meter too much. Ideally, a strong player spends meter to secure round wins and knows when to save for the anchor – evidence of good decision-making. This might be evident if, for example, they do not use an unnecessary Climax super to finish off an opponent with 5% health (overkill), instead conserving it. Another signal is **breadth of character knowledge**: KoF has huge rosters, so being able to fight against unusual characters (knowing their move properties) is important. If a player handily defeats opponents using rarely-seen characters, it implies extensive matchup knowledge. In summary, scouts seek **technical execution, pressure control, rapid anti-air reactions, smart meter use, and team strategy**. Many of these can be quantified (like anti-air success rate, average damage per combo, guard crushes, meter efficiency ratios), which can feed into AI scouting models.

### AI Integration Opportunities  
AI can enhance KoF training by handling the complexity of 3v3 dynamics and high execution demands. One possibility is an **AI matchup trainer**: KoF has dozens of characters; an AI could let players simulate facing any character with configurable styles. For instance, if a player struggles against a very defensive **Athena**, an AI bot could be set to “turtle” with Athena, teaching the player how to crack that defense. Conversely, the AI could play an ultra-aggressive Iori to drill the player’s defensive responses. The AI’s ability to **mimic human-like patterns** (through reinforcement learning on replay data) means it could reproduce common tactics from top KoF players, giving users a chance to practice against “virtual Daimon grappler” or “rushdown Kyo” outside of tournament sets. AI can also help with **combo optimization**: given the complexity of MAX mode routes, an AI tool could take a character and discover optimal combo routes for various starters, effectively acting as a lab coach. These combos can then be presented to the player to learn, potentially even integrated as interactive combo trials in the app. In live analysis, an AI overlay could track each character’s meter and health and suggest strategic decisions: *“Your point character has built 3 bars and low health – consider using a Climax super to deal heavy damage before they go down.”* It could similarly advise when to switch up the team order in a longer set (many KoF matches allow losers to change order): *“Recommend moving your anchor to mid for the next game to better counter their second character.”* Another integration is real-time **hit confirmation training**: the AI can detect whether the player successfully confirms a hit into a combo. If not, it can rewind the scenario (in a training mode setting) to let them practice confirming that exact situation (similar to how some rhythm games let you retry a missed section). The AI could also analyze team synergy: for example, pointing out *“Your second character often dies with full meter – perhaps swap them to anchor to utilize those resources.”* Additionally, for a data-rich game like KoF, an AI could predict the **optimal team order** against a given opponent’s team by analyzing historical data (maybe it finds that putting a certain character first yields a higher win probability versus the opponent’s lineup). This goes into more experimental territory, but with enough data, the AI could become a “team coach,” optimizing the team composition strategy. Overall, AI’s strength in handling multivariate scenarios (3 characters, meters, etc.) fits well with KoF’s complexity, making it a natural fit to assist players in both micro aspects (combos, reactions) and macro strategy (team order, resource use).

### Example Data Schema (Player & Match Data)  
```yaml
match_id: KOFXV_LeagueFinal_Match5
player1:
  name: "Mao"
  team_order: ["Iori", "Benimaru", "Terry"]
  result: "Win"
  characters:
    Iori:
      damage_done: 500
      opponents_defeated: 2
      meter_used: 3
      critical_hits: 5   # number of big combo starters landed
      survived_time_seconds: 60
    Benimaru:
      damage_done: 220
      opponents_defeated: 0
      meter_used: 1
      critical_hits: 1
      survived_time_seconds: 20
    Terry:
      damage_done: 300
      opponents_defeated: 1
      meter_used: 2
      critical_hits: 2
      survived_time_seconds: 35
player2:
  name: "XiaoHai"
  team_order: ["Kyo", "Mai", "Elizabeth"]
  result: "Lose"
  characters:
    Kyo:
      damage_done: 450
      opponents_defeated: 1
      meter_used: 2
      critical_hits: 4
      survived_time_seconds: 55
    Mai:
      damage_done: 180
      opponents_defeated: 0
      meter_used: 1
      critical_hits: 1
      survived_time_seconds: 15
    Elizabeth:
      damage_done: 200
      opponents_defeated: 0
      meter_used: 3
      critical_hits: 2
      survived_time_seconds: 25
stats_summary:
  total_rounds: 5
  final_character: "Terry"  # last man standing
  ocv: false               # one character victory happened or not
  longest_combo: 18        # highest combo hits in match
  climax_finishes: 1       # number of rounds ended with a Climax super
```  

In this YAML example, we capture each player’s team and each character’s contribution. For each character we log damage dealt, how many opponents they KO’d, meter used, etc., as well as survival time (how long they stayed alive). The summary gives overall match context (rounds, whether an OCV occurred, longest combo, etc.). This rich schema enables analysis like identifying which character was the MVP (here Iori did major work for Player1), and how meter was allocated across the team. These data points would fuel insights on team efficiency and clutch performances.

### Tailoring App Features  
- **StrategyRecommendation:** In KoF, strategy advice can occur on both the team level and character level. The app can advise on **team order** based on performance data: e.g. *“Your anchor character often doesn’t get to fight until it’s too late – try moving them to point to make an early impact.”* If the AI notices the player frequently ends rounds with excess meter on a defeated character, it might recommend *“Use more meter with your second character instead of saving everything for the last – it’s going unspent and wasted.”* Character-specific tips would be similar to other fighters: *“Athena’s Psycho Ball zoning gave you trouble – use short hop attacks to get over them or utilize your roll to close distance.”* Because KoF has the roll mechanic, the AI might detect underuse and suggest *“In defensive situations, remember you can forward roll through slow projectiles – practice timing to escape corner pressure.”* Another strategic layer is **counter-picks** – if the app tracks player win rates and finds, say, they lose often to grapplers, it might suggest team adjustments or practicing certain anti-grappler tactics (like zoning or safe jumps). For execution-heavy issues, strategy recommendations could include *“Practice short-hop instant overheads – you missed some jump-ins that could have been overhead hits.”* Essentially, the recommendations should cover: team formation, resource (meter) usage, matchup tactics for troublesome characters, and execution improvements.  
- **PlayerCard:** A KoF PlayerCard should reflect the 3v3 nature. It can list the player’s **Favorite Team** (the trio they use most, e.g. *Kyo/Iori/Terry*), and possibly a **Character Pool** (all characters they’re proficient with). Key stats might include **Overall Win Rate**, and a breakdown per character: e.g. *Iori – 75% win when on team, average kills per match: 1.8; Terry – 60% win, avg kills: 1.0*. This shows which characters pull the most weight. The card could also show **Team Win Streak** (longest streak with a certain team) and **OCV count** (how many times they’ve OCV’d opponents or been OCV’d – indicative of dominance or vulnerability). Another useful visualization is a bar for **Average Damage per Character Life** – effectively how much each character of theirs tends to accomplish. For example, if their point character consistently does 500 damage (roughly two opponents) that bar is high. A graphic of the player’s **meter usage efficiency** (percent of available meter actually spent meaningfully) could also be shown as a performance indicator. Since KoF players often have a “main team” and alternates, the PlayerCard might even allow toggling between stats for different teams they play. Overall, someone viewing the PlayerCard should quickly grasp this player’s team strategy and effectiveness (e.g. “This player is a closer – their anchor character has very high clutch win rate”).  
- **AIInsights:** Given the wealth of data from team battles, AI insights can be quite rich. For example, the AI might observe: *“Your second character consistently underperforms (averaging only 200 damage before defeat) – consider why. Are they mismatched against common opponents? Or are you lacking confidence with them? You might swap them out or invest practice time there.”* Another insight: *“When you win, your first character often takes out 2 opponents. When you lose, your first character only does 0.8 on average. Focus on improving the early game – perhaps a stronger point character or safer play at the start.”* The AI could highlight **meter usage patterns**: *“You frequently die with over 3 power gauges unused on your last character – try using Max Mode combos earlier.”* It might call out defensive habits: *“Out of 10 incoming hop attacks, you only anti-aired 2. This led to heavy pressure. Work on reacting to hops with an uppercut or standing normal.”* Since KoF rounds transition, an insight could be *“After you win a round and carry momentum, you often immediately use a raw super at start of next round and it failed 80% of time – consider a different approach when you have momentum, as opponents expect aggression.”* On team synergy: *“Character A and B have redundant roles (both are meter-hungry anchors). This sometimes leaves you without meter in endgame. Try replacing one with a ‘battery’ character who can function with low meter.”* The AIInsights essentially tie together the cause-effect across the match: for instance, linking that an early character drop without dealing damage statistically leads to the player losing 90% of those games – highlighting the need to shore up that character’s performance. These factual, data-backed insights let the player make informed decisions on training and team composition.  
- **PerformanceChart:** Visualizing a KoF match can be done from a team perspective. One idea is a **character life timeline**: a horizontal timeline showing how the match progressed as characters fought one after another, with bars indicating how much health each character took off the opponent and how long they lasted. This would clearly show, for example, one character sweeping an entire team (one long bar dominating the timeline). A **stacked bar chart** could show the contribution of each of the player’s characters to total damage or kills in the match. Another chart might show **meter usage by character** – e.g. a set of three gauge icons per character filled proportionally to how much meter they used vs wasted. A **round outcome matrix** might be used since KoF effectively has mini-rounds (each character vs character fight): e.g. a grid with the player’s team on one axis and opponent’s team on the other, marking which character beat which (like Iori defeated two opponent characters, then lost to the third; this could be color-coded on a matrix). A **combo scatter plot** might show damage of each combo landed on the y-axis versus which character performed it on x-axis – illustrating consistency or big drop-offs. PerformanceCharts can also break down **offense vs defense** per character: e.g. how much damage each character dealt vs took, in a side-by-side bar. If the player’s anchor routinely has to deal more damage than they took (i.e. they are always playing comeback), that will show up. Additionally, given KoF’s emphasis on momentum, a chart could highlight **health carryover**: how much health the winning character had at round end (a high carryover means a decisive win, low means a close fight). Representing that across matches might show if the player tends to barely scrape by or win decisively. These charts together convey how the team works as a unit – maybe the player sees that one member is consistently underperforming through these visuals and decides to adjust. And during match review, seeing a timeline of character eliminations with relative health remaining can vividly tell the story of where things went wrong or right.

---

## Pokémon Unite  
### Core Gameplay Overview  
Pokémon Unite is a 5v5 team-based **Multiplayer Online Battle Arena (MOBA)** that differentiates itself by its scoring mechanics rather than base destruction. Two teams of five Pokémon battle on a symmetric map with two “lanes” (top and bottom) and a central wild area ([
		Pokémon UNITE Review | RPGFan		](https://www.rpgfan.com/review/pokemon-unite/#:~:text=The%20most%20notable%20unique%20feature,scored%20the%20most%20points%20wins)). Instead of trying to destroy a base, players earn **Aeos energy** by defeating wild Pokémon scattered across the map or knocking out enemy players, then score points by dunking that energy into the opponent’s goal zones ([
		Pokémon UNITE Review | RPGFan		](https://www.rpgfan.com/review/pokemon-unite/#:~:text=The%20most%20notable%20unique%20feature,scored%20the%20most%20points%20wins)). Each team has five goal zones (goals) placed along lanes; when a player stands on an enemy goal and channels a dunk, they score their collected points and reduce that goal’s durability. Once enough points are scored on a goal, it is destroyed. A match is a fixed 10-minute duration – whichever team has more points scored at the end wins ([
		Pokémon UNITE Review | RPGFan		](https://www.rpgfan.com/review/pokemon-unite/#:~:text=collect%20points%2C%20which%20they%20can,scored%20the%20most%20points%20wins)). During the match, Pokémon level up by gaining XP from wild and enemy KOs, evolving (for those that have evolutions) and unlocking stronger moves. There are no item shops or gold; instead, strategy revolves around **when to score vs. when to fight**. Key objectives include powerful boss Pokémon like **Zapdos or Rayquaza** that appear in the endgame – defeating these gives huge team-wide benefits (like easier scoring or bonus points) that often decide the game. Unite also features **Unite Moves** (ultimate abilities unique to each Pokémon) that can swing fights. Typical team roles are All-Rounder, Attacker, Defender, Speedster, and Supporter, each contributing differently (damage, tanking, mobility, healing, etc.). The core loop is to **farm wild Pokémon**, **engage in team skirmishes**, and **score points** while denying the enemy opportunities to do the same. Because scoring requires a channel time, teamwork to cover the scorer is vital. Overall, Pokémon Unite’s gameplay is a fast-paced blend of MOBA strategy and dunking mechanics, with most games coming down to big team fights over major objectives and clutch scoring in the final minutes.

### Player Performance KPIs (Ranked & Pro)  
- **Ranked KPIs:** Pokémon Unite’s ranked mode divides players into tiers (Beginner, Great, Expert, Veteran, Ultra, Master). A primary KPI is the **rank tier and point rating** (especially in Master rank, players have a numerical rating). **Win rate** in ranked matches is a straightforward indicator of performance. However, granular stats matter too: average **score per game** (how many points the player personally scores) is important given scoring is the win condition. Also, **KDA** (Kills/Knockouts, Deaths, Assists) is tracked – for example, a player might average 8 KOs, 2 deaths, 10 assists per game, indicating strong teamfight presence. Another KPI is **Damage dealt vs. damage taken** – are they contributing high damage while staying alive? In-game end-of-match stats show **damage dealt, damage received, and healing done** for each player, which can serve as performance metrics. **Objective control** is key in Unite: metrics such as how many **Drednaw/Rayquaza** (boss objectives) the player secured (or had a hand in) reflect macro impact. A Supporter might have lower KOs but high **assist counts and healing** – their value can be measured by **average healing per game** or **goal support** (how often they helped allies dunk by, say, using moves to speed up scoring). **Goal scoring efficiency** (points scored vs attempts or vs time) could be another metric – for example, someone who scores 100 points reliably every game is doing their role in scoring. **MVP rate**: the game awards an MVP to one player on each team based on a performance score – how often a player gets MVP is a composite indicator.  
- **Pro KPIs:** In professional Unite (tournament play), the metrics get more specialized. Team coordination is paramount, so **Kill Participation** (the percentage of team knockouts a player was involved in) is a meaningful KPI – a high percentage means the player is consistently present in team fights (like a good Support or All-Rounder would be involved in 80%+ of team KOs). **Average farming rate** (XP or levels attained by certain time stamps) is tracked for junglers (Speedsters) and laners to ensure they keep up – for instance, “at 5 minutes in, Player X averages level 11” is a metric. **Objective secure rate**: how often does the player successfully last-hit major objectives (if they are typically the one trying, e.g. using a burst Unite Move to steal Rayquaza)? **Damage share** in team fights – sometimes expressed as percentage of team’s total damage dealt – highlights their contribution relative to team. Another interesting KPI is **goal contribution** – not just personal points scored, but how many points in total did they help facilitate (including assists on goals, like buddy barrier usage enabling a teammate’s score). Professional matches also consider **rotation timing** (e.g. percentage of times the player is on time to Drednaw spawn). On defense, **goal defense success** can be measured – how often do they prevent enemy scores by KO’ing or pushing back opponents at goals. If the player is a Defender role, **damage taken and mitigated** (like via shields provided) is their value, as well as number of **goal zones defended**. **Unite move usage efficiency** is a high-level KPI: for instance, how many key KOs or saves they get per use of their ultimate (wasting Unite moves can cost games). In short, pro KPIs revolve around teamfight impact (kill participation, damage/healing), macro objective impact (secure rates, rotation punctuality), and scoring impact (points scored or prevented).

### Scouting Insights & Skill Signals  
In scouting a Pokémon Unite player, one must assess both their mechanical skill and macro-game sense. **Map awareness and positioning** is a huge signal: a good player is nearly always in the right place at the right time – for example, a jungler who consistently shows up for every Drednaw fight exactly as it spawns demonstrates timing and map awareness. A scout might notice this as *“always present for objectives, never late to rotations.”* Another signal is **teamfight decision-making**: Does the player focus the right targets (e.g. KO’ing the enemy damage dealer first) or use their Unite Move at clutch moments? A qualitative signal could be, “this Support player always saves Unite Move for Zapdos fight and manages to shield allies at critical low-health moments,” indicating high game IQ. **Mechanics**: While Unite is less mechanically intensive than some MOBAs, things like *aiming skillshots* (hitting skill abilities consistently) and *movement* (e.g. using dash moves to dodge enemy attacks) are important. A stat signal might be high accuracy on key moves – though not explicitly tracked by the game, a reviewer could manually observe that e.g. Crustle’s Rock Tomb usage consistently traps enemies effectively. **Objective stealing or securing** ability stands out – players known for clutch steals (like using a Greninja Unite to steal Zapdos) demonstrate calm under pressure and timing. **Consistency in farming**: a top player rarely falls behind in levels; scouts can look at their average level compared to the opponent’s at various intervals. If someone is consistently 2 levels above their lane opponent by mid-game, that’s a huge indicator of lane dominance and efficiency. **Support and synergy**: if evaluating a support player, signals include how well they stick with and enable the team (high assist counts, always with the team in engagements). Also, **versatility**: can the player flex into multiple roles (attackers vs defenders) as meta demands? A flexible player is valuable. Communication and leadership might also be inferred: a player pinging objectives and grouping the team proactively (though not directly measurable in stats, a scout in voice comms or reviewing gameplay might see that intangible quality). From the data side, **kill participation** is a catch-all signal of involvement – if a player’s KP is 90%, they’re literally part of almost every play, which is stellar. **Low death count** combined with high damage or scoring is another signal of a carry who knows how to stay alive (i.e. great positioning). In summary, scouts look for **strong map awareness, clutch playmaking (objectives and teamfights), mechanical reliability, consistent farm and level advantage, and adaptability**. Many of these can be supported by stats: e.g. level advantage time graph, damage-to-death ratio, etc., which an AI could highlight.

### AI Integration Opportunities  
AI can be a powerful tool in Pokémon Unite to analyze strategies and train players. One opportunity is **real-time strategy coaching**: an AI could monitor the minimap and team status and give suggestions like a human shotcaller would. For instance, *“The enemy team has three members shown top lane – consider pushing or scoring in bottom lane where they’re undermanned.”* Or *“Drednaw spawning in 20 seconds, start rotating your team to bottom.”* This is akin to an AI macro-coach ensuring the player doesn’t miss crucial rotations or opportunities. In a training context, AI could present **scenario simulations** – e.g. a 3v3 Zapdos fight scenario where the player can practice decision-making (should I engage, secure Zapdos, or score?). The AI can randomize enemy behavior to practice various outcomes. Another integration is **predictive outcome modeling**: the AI can alert, *“Your team is 100 points behind – you likely need to secure Rayquaza to win, focus on that objective.”* (It might even compute win probabilities with/without certain objectives). For mechanical improvement, one could use AI to practice skillshot accuracy: e.g. a custom mode where an AI moves a dummy Pokémon unpredictably and the player tries to land Greninja’s Water Shuriken, with the AI adjusting difficulty as accuracy improves. **Pathfinding optimization** is another area – AI could analyze the player’s farming route and suggest more efficient paths to maximize XP by certain time (similar to how RTS bots learned optimal build orders). The AI could also digest thousands of games to find strategies: for example, it might reveal *“Teams that allocate 3 players to secure Rotom while keeping 2 at bottom to defend Drednaw have a 10% higher win rate in pro play.”* That insight can then be coached to players in-game, adapting to the current scenario. Another advanced idea: **draft assistance** – if Unite has a draft mode in competitive play (pick/ban Pokémon), an AI could help choose a balanced team composition or counter an opponent’s picks by analyzing synergy and counters from historical data. In summary, AI in Unite can act as an on-field tactical assistant, a post-game analyst to crunch numbers on what could have been done differently, and a training partner to refine both macro (rotations, farming) and micro (skill usage, combos on specific Pokémon).

### Example Data Schema (Player & Match Data)  
```json
{
  "match_id": "UNITE2025_Worlds_Semi1_Game3",
  "team": "Team Lightning",
  "player_name": "AceTrainer",
  "role": "Attacker",
  "pokemon": "Cinderace",
  "stats": {
    "kills": 8,
    "deaths": 2,
    "assists": 10,
    "damage_dealt": 85000,
    "damage_taken": 30000,
    "healing_done": 0,
    "points_scored": 120,
    "goal_attempts": 6,
    "goal_success": 4,
    "largest_score_streak": 50,  // largest single dunk
    "farm_xp": {
      "wild_pokemon_kills": 45,
      "avg_level_lead_at_5min": 1.5
    }
  },
  "objective_stats": {
    "drednaw_taken": 2,
    "drednaw_stolen": 0,
    "rotom_taken": 1,
    "rayquaza_taken": false,
    "zapdos_taken": false,
    "objective_damage": 15000  // damage dealt to objectives
  },
  "positioning": {
    "top_lane_time_pct": 0.60,
    "bot_lane_time_pct": 0.25,
    "jungle_time_pct": 0.15,
    "average_distance_from_teammates": 800  // in game units
  },
  "performance": {
    "mvp_score": 85,
    "rating": "A+",
    "kill_participation_pct": 90.0,
    "team_damage_pct": 35.2,
    "team_points_pct": 40.0
  }
}
```  

This JSON captures a single player’s performance in a match. It includes basic combat stats (kills, damage), scoring stats (points scored, goal attempts), farming info, and objective contributions. Positioning breakdown shows how they allocated their time on the map. The performance section aggregates impact relative to the team (kill participation, share of team’s total damage and scoring). Such a schema allows a dashboard to display everything from simple K/D to nuanced insights like lane presence and contribution to major objectives. For team-level analysis, similar schemas would be collected for all players.

### Tailoring App Features  
- **StrategyRecommendation:** In Pokémon Unite, strategic recommendations are often about **where to be and when** and **what to prioritize**. The app could analyze a user’s gameplay and say: *“At 7:00 remaining, you often stay in lane farming when Drednaw (bottom objective) is up – start rotating earlier (around 7:20) to secure it with your team.”* If the player is an Attacker who loves to teamfight but neglects scoring, it might suggest *“After winning a team fight, prioritize dunking points in goals – you left ~50 Aeos energy unscored in several victories.”* Role-specific tips: for a Speedster (jungler), *“Ensure you gank lanes by ~8:30 remaining; your impact was delayed last game – your bot lane struggled without early help.”* For a Defender, *“Stay near goal zones when enemies with high points are lurking – your presence deters their scoring.”* The StrategyRecommendation could even suggest item or Pokémon picks: *“Notice you like aggressive play – consider using a Buddy Barrier on Cinderace to survive brawls, or try Greninja for a more burst-heavy style.”* If a player consistently loses final Zapdos/Rayquaza fights, the app might recommend *“Coordinate with team to secure vision around the pit at 2:00 remaining and maybe refrain from using Unite Move at 3:00 so it’s available for Zapdos.”* These recommendations, tied to specific timestamps and decisions, help align the player’s strategy with high-level tactics.  
- **PlayerCard:** A Unite PlayerCard should summarize the player’s preferred role and their performance stats in that role. It might show **Role: All-Rounder** (if they play mostly that role) or a distribution if they play multiple roles (Attacker 60%, Speedster 40%). It would list their **Top 3 Pokémon** (e.g. *Cinderace – 200 games (65% win), Snorlax – 150 games (60% win), Venusaur – 100 games (70% win)*). Key performance averages can be shown: **Avg K/D/A**, **Avg Points Scored per match**, **Avg Damage Dealt**. A visual could be a pentagon chart corresponding to the five roles with shading indicating skill level or experience in each. If the app has a notion of **rating** (like an internal ELO or Master rank points), that should be prominent. Another nice touch: **MVP rate** (percentage of matches the player earned MVP on their team) and **Win rate in ranked**. A trophy icon could indicate highest rank achieved each season. For team recruiters or comparisons, the PlayerCard might display the player’s **preferred playstyle** tags like “Aggressive Laner” or “Objective-focused Support” based on their stats (for example, high kill participation might label them a “Teamfighter”). Essentially, the PlayerCard gives a snapshot of the player’s identity in Unite: what Pokémon they excel at and how they contribute to matches (scorer, damage dealer, defender etc.), akin to a sports trading card for the player.  
- **AIInsights:** The AI insights for Unite would focus on macro and micro improvements gleaned from data. For example, *“Your average points scored in the last 5 minutes is low compared to your early game – consider coordinating more late-game scoring, perhaps split pushing if your team is losing fights.”* If the player consistently overextends, an insight might say *“50% of your deaths occurred within 5 seconds after you KO’d an enemy – likely due to chasing too deep. After a KO, assess if it’s safer to pull back and score or take an objective.”* The AI can highlight missed opportunities: *“There were 3 occasions where you had 40+ Aeos energy but didn’t get to score before being KO’d. Try to utilize score shields or team cover to deposit those points.”* Another insight could be *“When playing as Defender role, your damage taken was extremely high without backup – ensure allies are nearby to capitalize on the space you create, otherwise you’re just feeding damage.”* Comparative insights to peers: *“Compared to top Master players, your average Rotom secure rate is low – you may be under-prioritizing top lane objectives. Rotom can pressure enemy goals, consider balancing objective focus.”* It can also applaud strengths, e.g. *“Excellent farm efficiency: you consistently hit level 15 before final stretch, giving your team an edge.”* Such feedback helps reinforce good habits and correct bad ones. For communication or shotcalling, if voice data isn’t available, the AI might still infer leadership: e.g. *“You often initiate Drednaw on your own – try to ping teammates for help to improve secure success.”* Over time, AIInsights can track improvement: *“Two weeks ago your kill participation was 60%, now it’s 75%. You’re much more involved – great job working with the team!”* This closes the feedback loop and motivates the player.  
- **PerformanceChart:** The dynamic nature of Unite matches can be captured with a few key charts. A **score timeline** is particularly insightful: plotting both teams’ total score over the 10 minutes. This shows when one team pulled ahead or when big scoring happened (often there’s a spike around final 2 minutes due to Rayquaza/Zapdos double points). Overlaid icons can mark objectives taken (Drednaw, Rotom) on the timeline to correlate objective control with scoring swings. Another chart: **XP/level progression graph** for the player (and maybe average of team vs opponents). If the player sees their level line dipping below opponents at certain points, they know when they fell behind in farm. A **pie chart of contributions** might break down the player’s influence: e.g. % of team’s total KOs, % of team’s damage, % of team’s scoring – giving a visual of whether their impact was balanced or skewed. A map-based heatmap could show **where on the map the player scored points or got kills** – for example, lots of activity around top lane vs bottom. This can reveal if they neglected one side of the map. A bar chart for **objective participation**: number of each major objective (Drednaw/Rotom/Rayquaza) the player had a hand in. If one bar is zero, that stands out. Additionally, a **radar chart** could represent key facets: Offense (KOs, damage), Defense (deaths, damage taken), Support (assists, healing), Scoring (points), Objective (objectives secured). The player’s performance in that match (or average) could be plotted against the team’s or an optimal benchmark. This visually highlights if, say, their Scoring is lower relative to other aspects, prompting them to focus more on that win condition. These performance charts take the complex flow of a Unite match and break it into visuals that make it clear how the match progressed and what the player’s role in that progression was. For example, seeing a flatline in the score timeline until final 2 minutes then a huge jump might remind the player that early scoring was too low and they relied too much on a final comeback – a risky playstyle to adjust.

---

## PUBG Mobile – Asian Games Version  
### Core Gameplay Overview  
**PUBG Mobile (Asian Games Version)** is a special variant of the popular battle royale game **PlayerUnknown’s Battlegrounds Mobile**, modified to fit a non-lethal, scoring-focused format for the Asian Games. In the standard PUBG Mobile, 100 players parachute onto a map, scavenge weapons, and fight to be the last person or squad standing. However, the Asian Games Version replaces direct combat with a multi-stage target shooting and racing competition, aligning with a no-violence directive ([PUBG Mobile Asian Games Version features Non-Violent Gameplay Rules](https://www.esports.net/news/mobile-games/pubg-mobile-asian-games-version-non-violent-gameplay/#:~:text=PUBG%20Mobile%20will%20feature%20a,to%20AESF%E2%80%99s%20no%20violence%20policy)) ([PUBG Mobile Asian Games Version features Non-Violent Gameplay Rules](https://www.esports.net/news/mobile-games/pubg-mobile-asian-games-version-non-violent-gameplay/#:~:text=The%20first%20to%20shoot%20down,to%20win%20in%20this%2C%20though)). In this format, teams (typically four players representing a country) still parachute from an aircraft but instead of fighting each other with live ammo, they race through checkpoints and engage in shooting galleries with targets. The objective is to finish an obstacle course in the shortest time while hitting as many targets as possible ([PUBG Mobile Asian Games Version features Non-Violent Gameplay Rules](https://www.esports.net/news/mobile-games/pubg-mobile-asian-games-version-non-violent-gameplay/#:~:text=,subzidite2%29%20June%2003%2C%202023)) ([PUBG Mobile Asian Games Version features Non-Violent Gameplay Rules](https://www.esports.net/news/mobile-games/pubg-mobile-asian-games-version-non-violent-gameplay/#:~:text=PUBG%20Mobile%20will%20feature%20a,to%20AESF%E2%80%99s%20no%20violence%20policy)). For example, a course might require the team to drive a vehicle through a route, stop at a firing range to shoot targets (such as stationary bullseyes or flying clay pigeons) using the in-game guns, then proceed to a finish line. Points are scored for accuracy and speed: hitting targets adds to the score or reduces time, while failing to hit could incur penalties. The team that **completes the course fastest (after target score adjustments)** wins the round ([PUBG Mobile Asian Games Version features Non-Violent Gameplay Rules](https://www.esports.net/news/mobile-games/pubg-mobile-asian-games-version-non-violent-gameplay/#:~:text=,subzidite2%29%20June%2003%2C%202023)). This mode removes person-to-person shooting entirely ([PUBG Mobile Asian Games Version features Non-Violent Gameplay Rules](https://www.esports.net/news/mobile-games/pubg-mobile-asian-games-version-non-violent-gameplay/#:~:text=The%20core%20experience%20of%20PUBG,have%20target%20and%20shooting%20practice)) – players do not shoot at each other, only at targets – making it more like a biathlon or time-trial event within the PUBG framework. Core gameplay skills involve **parachuting onto the optimal path**, **driving skillfully** through terrain, and **marksmanship** in a controlled setting rather than combat. Essentially, it transforms PUBG from a battle royale into a **target shooting competition with racing elements**, while preserving the familiar weapons, ballistics, and physics of PUBG for the shooting portions. Team coordination still matters (e.g. all team members might need to hit their targets to proceed, or they might take turns at stations), but gunfight tactics like flanking or cover usage are irrelevant in this version.

*(Note: Outside the Asian Games context, PUBG Mobile’s core gameplay is a battle royale – scavenging, survival, and combat until one team remains. But since the question specifically refers to the Asian Games Version, the above focuses on that modified format.)*

### Player Performance KPIs (Ranked & Pro)  
- **Ranked KPIs (Standard PUBG Mobile):** In normal PUBG Mobile ranked play, a player’s performance is measured by metrics like **average kill count** (how many enemy players they eliminate per match), **win rate** or Top 10 rate (frequency of reaching the final circles or winning Chicken Dinners), and their **tier ranking** (Bronze up to Conqueror). Supporting stats include **average damage per match**, **headshot percentage**, **longest kill distance**, and **survival time**. A high-skilled ranked player might have, for example, an average of 1500 damage, 8 kills per match, and consistently survive into the final zones. **K/D ratio** is a common KPI – a ratio above, say, 5 indicates they kill five enemies for every death, which is very strong in battle royale. **Accuracy** (hit percentage) and **sniper kill counts** etc. could be tracked via achievements. However, in the **Asian Games target-shooting context**, the KPIs shift to reflect the new objectives.  
- **Competition KPIs (Asian Games Version):** Key performance indicators for players/teams in the Asian Games mode revolve around **speed and accuracy**. For example, **course completion time** (with and without penalties) is fundamental – teams are essentially ranked by time. Within that, **target accuracy rate** is crucial: how many targets did the player hit out of those presented? Did they require multiple shots per target or one each? A high accuracy (say 90%+ targets hit on first attempt) is a great KPI. **Score from targets** might be a raw number if certain targets have point values. Another KPI is **driving precision**: perhaps measured by time spent off the optimal route or any driving penalties (like vehicle crashes or missed checkpoints). If the format tracks each stage, then **shooting range score** and **driving segment time** for each team can be KPIs. In a team context, **communication efficiency** (though hard to quantify) could manifest as fewer errors or delays in transitions (like how quickly teammates start shooting once arrived at a range). If we treat it akin to a relay or combined event, one could measure **consistency across rounds** – for instance, the team’s times in heats vs finals. Since this is a novel format, hypothetical KPIs at pro level might include **ranking points** from multiple runs, or an aggregate of accuracy + time. If any combat element remains (some reports said “no person-to-person shooting” ([PUBG Mobile Asian Games Version features Non-Violent Gameplay Rules](https://www.esports.net/news/mobile-games/pubg-mobile-asian-games-version-non-violent-gameplay/#:~:text=The%20core%20experience%20of%20PUBG,have%20target%20and%20shooting%20practice)) so presumably none), if there were, kills would be a KPI but it sounds like pure PvE. Thus, think of it like an esports decathlon: KPIs are like *fastest lap*, *bullseye count*, *penalty time*. For an individual shooter within the team, **reaction time** to shoot pop-up targets and **weapon handling** (time to reload or switch weapons efficiently) could be measured. To summarize, standard PUBG Mobile KPIs (kills, survival) don’t apply here; instead **accuracy%, hit count, time to complete, penalties, and overall score** are the metrics of success. Organizers likely provide a **scoreboard** that combines these (e.g. X points for time + Y points for accuracy). The team with the highest combined score or shortest adjusted time wins the event.

### Scouting Insights & Skill Signals  
In the Asian Games PUBG Mobile format, scouting a player or team is more about evaluating marksmanship and composure under a different kind of pressure. **Target shooting skill** is paramount: a top signal is a player’s **aim stability and precision**. Scouts would look at how consistently a player hits bullseyes or high-score sections of targets. For moving or flying targets, **leading accuracy** (judging how a target moves and timing the shot) is key. This can be partially inferred from standard PUBG skills: if someone is known for landing moving sniper shots on enemies in normal play, that translates well to hitting moving targets. **Reload and weapon swap speed** – in a time trial, every second matters. If a player quickly swaps to a secondary weapon instead of reloading if that’s faster to keep shooting, it shows presence of mind. **Driving skill** signals include smooth vehicle control, no flipping or crashing, and taking optimal racing lines. In normal PUBG, a player known for stunt driving or fast rotations would likely shine here. Another insight: **multitasking and communication**. Perhaps one team member drives while others shoot from the vehicle at targets on the move – those who can coordinate “driver slows down at just the right moments for shooters to accurately fire, then speeds up” will excel. So a scout might simulate such scenarios to see how synchronized a team is. **Pressure handling** is a big one: in a high-stakes timed event, does the player choke (miss easy targets) or stay calm? Evidence might come from standard PUBG tournaments – a player who performs well in final circles under pressure likely also steadies their aim in this mode’s tense moments. If any event of this format has been held (maybe practice runs), one would look at **improvement curve** – teams that rapidly improve times show they learn and adapt, a great sign. Also, since everyone is theoretically on equal footing with set parameters, **consistency** is a key signal: a top team will post relatively consistent times/points each run, rather than one great run and one poor run. For individual players, you might look at **specific weapon proficiency** – e.g. are they better with rifles, DMRs, or sniper rifles for target shooting? If targets are at variety of ranges, a versatile shooter who can handle pistol shooting and long-range sniping would be valuable. In summary, scouts look for **sharp aim, quick decision-making (like when to reload or not), excellent vehicle handling, team coordination, and clutch performance**. Many of these can be gauged from traditional PUBG, but this format adds a unique blend of **esports and sports** (accuracy sport). A signal unique to this format: how efficiently a player transitions from one task to another (e.g. driving -> shooting -> driving). Smooth transitions without fumbling (like immediately opening fire accurately after exiting a vehicle) are observable and crucial.

### AI Integration Opportunities  
AI can assist teams training for this PUBG Mobile variant in several ways. **Aim training** is an obvious one: an AI-powered aim trainer within PUBG Mobile could generate virtual target ranges with dynamic moving targets, adjusting speed and pattern based on the player’s performance to hone their accuracy. Think of it like a smart target gallery that records which targets the player misses and then emphasizes those types (like small distant targets) in subsequent practice. For the driving component, AI could simulate the **optimal racing lines and braking points** on the PUBG map route. By analyzing the terrain data, an AI could potentially output a ghost run showing the fastest possible path and time. Players can then try to mimic that ghost, similar to how racing games use AI ghosts for time trials. AI can also do **run analysis**: after each practice run, break down where time was lost. For instance, *“You spent 5 extra seconds at Station 2 reloading – perhaps plan a weapon switch before that station”* or *“Your vehicle route took a rough slope causing a slowdown; try a slightly longer but flatter path to maintain speed.”* Another integration: **predictive scoring** – the AI can watch partial performance and predict the final outcome, which could be used mid-training to decide if the team should restart a run or continue. Given that teamwork and coordination matter, an AI could facilitate **communication drills**: e.g. enforce that shooters call out “clear” when targets are done so driver knows to move, and flag if the team is slow to signal. The AI could measure the delay between last target hit and vehicle start moving, giving feedback like *“0.5s delay in resuming driving – tighten that communication.”* In real time competition, if allowed, an AI assistant could prompt the team: *“All targets hit, go!”* immediately when a station is cleared, though in fairness that might not be allowed by rules. Another area is **mental focus and pressure simulation**: AI can simulate crowd noise or pressure scenarios to acclimate players. Since this is a unique event where no direct enemy interaction occurs, AI could simulate worst-case conditions (wind? though not in PUBG likely, or maybe simulate recoil variability) to train players to deal with any surprises. If allowed by competition, an AI could also be used to **calculate scores on the fly** during practice so teams know if they are on record pace. Lastly, AI video analysis can compare their runs with other teams’ runs (if data or footage is available) to find where others gained time, effectively scouting the competition. For example, *“Team X brakes 1 second later at the shooting range and still maintained accuracy – you can push a bit more.”* Overall, AI serves as a coach that optimizes every aspect: aim, driving, coordination, and even psychological readiness for this format.

### Example Data Schema (Player & Match Data)  
```json
{
  "run_id": "AG2022_Final_TeamAlpha",
  "team_name": "Team Alpha",
  "players": [
    {"name": "Shooter1", "role": "Sniper"},
    {"name": "Shooter2", "role": "Rifle"},
    {"name": "Shooter3", "role": "Driver"},
    {"name": "Shooter4", "role": "Support"}
  ],
  "run_time_seconds": 310.5,
  "penalties_time_seconds": 20.0,
  "adjusted_time_seconds": 330.5,
  "segments": [
    {
      "segment": "Parachute_Landing",
      "time_seconds": 45.2,
      "notes": "Landed 50m from first vehicle"
    },
    {
      "segment": "Vehicle_Drive_1",
      "time_seconds": 60.0,
      "average_speed_kmh": 70,
      "offroad_time": 5.0
    },
    {
      "segment": "Shooting_Range_A",
      "targets": 20,
      "targets_hit": 18,
      "accuracy": 0.90,
      "time_seconds": 30.0,
      "weapons_used": {
        "Shooter1": "SKS",
        "Shooter2": "M416"
      }
    },
    {
      "segment": "Vehicle_Drive_2",
      "time_seconds": 40.0,
      "average_speed_kmh": 80,
      "penalty": "Hit obstacle - 5s"
    },
    {
      "segment": "Shooting_Range_B",
      "targets": 15,
      "targets_hit": 15,
      "accuracy": 1.0,
      "time_seconds": 25.0,
      "weapons_used": {
        "Shooter1": "Kar98k",
        "Shooter4": "UMP45"
      }
    },
    {
      "segment": "Final_Sprint",
      "time_seconds": 50.3,
      "notes": "Reached finish line"
    }
  ],
  "total_targets": 35,
  "total_hit": 33,
  "team_accuracy": 0.943,
  "rank_in_round": 1
}
```  

This JSON schema represents a team’s performance in one run of the PUBG Mobile Asian Games event. It breaks the run into segments: parachuting, driving segments, and shooting range segments. For each shooting segment, it logs targets and hits, accuracy, time spent, and which weapons each shooter used. It also captures overall time, penalties, and adjusted time which determines results. Additionally, roles of players are defined (some might primarily shoot or drive). The summary includes total targets hit and the final rank in that round. This schema would allow analysis of where time was lost (e.g. Segment data shows a 5s obstacle hit penalty in Drive_2) and how accurate the team was overall. It’s a structured way to compare runs between teams and identify strengths/weaknesses per segment.

### Tailoring App Features  
- **StrategyRecommendation:** For a team competing in this PUBG Mobile mode, strategy recommendations might revolve around optimizing each phase of the run. The app could say: *“Parachute closer to the vehicle – you lost 5 seconds on foot. Next time, open chute later to land directly on the car.”* During shooting, it might suggest *“Shooter1 took too long to acquire targets at Range A – consider having Shooter2 pick up some of those targets to balance load.”* If accuracy is an issue: *“Your team accuracy on moving targets is 70%. In this mode, each miss costs 2 seconds. Practice leading targets, maybe assign the best marksman the harder targets.”* For driving: *“You hit an obstacle in the second drive segment. Try a slightly wider turn around that rock –  it’s worth a minor distance increase to avoid a crash penalty.”* The app could even recommend an **order of weapons** to use at ranges: e.g. *“At Range B, start with sniper rifles for distant targets then switch to SMGs for close rapid targets.”* If one teammate is stronger at sniping, the strategy engine might suggest role adjustments: *“Shooter4 has higher accuracy with sniper – let them handle the long-range targets while Shooter1 uses AR.”* Also, time management: *“You spent too long ensuring all targets were hit in Range A; since one miss is only a small penalty, it might be faster to skip a difficult target than to spend 5 seconds on it.”* Essentially, recommendations blend racing lines, target allocation, and risk management (speed vs accuracy trade-offs). If the team is behind after a segment in multi-run events, the app might suggest *“Take an aggressive approach in the final – e.g., don’t slow down as much for targets, try shooting on the move.”* These tailored suggestions help the team refine their run strategy for maximum efficiency.  
- **PlayerCard:** A PlayerCard in this context might be more of a **TeamCard**, since it’s a team event. But if individual, it would highlight the player’s role (shooter or driver) and stats like **average target accuracy**, **average targets hit per range**, **average driving time**. For example, PlayerCard for a Shooter specialist: **Accuracy: 95%**, **Avg Targets Hit per run: 20**, **Favorite Weapon: M416** (if they excel with it). For a Driver: **Average driving time: X seconds**, **Penalties incurred: Y** (lower is better), **Consistency: finishes within 3s of best time**. If the player also competes in standard PUBG, it might list their traditional stats (to show their background): like classic mode K/D, etc., but that’s secondary here. The card may also show any medals or achievements: e.g. *Gold Medalist – National Trials*, or *Top Speed Record: 90 km/h average on track.* Essentially, it’s a profile of their skills relevant to the event. For teams, a TeamCard would list each member and their specialty (like “Team Alpha – Excellent at shooting, moderate driving. Combined accuracy 92%, Best Time 300s”). Visuals can include an accuracy chart and a best run time. This gives an overview to compare teams or players at a glance.  
- **AIInsights:** The AI insights for each run or training session could be very granular. *“Segment Breakdown: You lost most time in the first shooting range. Shooter2 missed 2 targets, costing ~4 seconds in re-aiming. Perhaps slow down the vehicle a bit more in range to allow steadier shots, which might save time overall.”* Another insight: *“Your team’s second run was 10 seconds slower mainly due to a vehicle flip – an anomaly. Otherwise, your times are consistent around 330s.”* The AI might detect pattern issues: *“Noticed Shooter3 tends to overcorrect aim (swaying crosshair) – this could be nerves. Consider lower sensitivity or taking an extra 0.2s to stabilize before firing.”* It could also compare to other teams (if data available): *“The winning team in finals averaged 5 seconds faster at Range B by splitting targets left/right among two shooters. Your team had all four firing somewhat redundantly. Assign clear sectors to each shooter to avoid wasted shots on the same target.”* If the AI has enough data, it could say *“If you improved accuracy from 90% to 95%, our model predicts an adjusted time gain of ~8 seconds, which could be the difference between bronze and gold.”* This quantifies the impact of specific improvements. Motivation-wise, it might highlight *“Strong point: zero penalties on driving in last 3 runs – keep up that consistency.”* or *“Shooter1’s fast reaction on pop-up targets gave you an edge. Lean on them for those while others focus on static targets.”* Essentially, AIInsights validate what went well and pinpoint what didn’t in a highly objective manner, giving the team clear focus points.  
- **PerformanceChart:** A few visual charts would greatly aid understanding team performance. One chart could be a **time distribution bar** for each segment of the run, side by side with an “optimal” or their best performance. For instance, bars for Parachute, Drive1, RangeA, Drive2, RangeB, etc., showing where the longest bars are (i.e., where most time is consumed). If “Shooting Range A” bar is tallest, that’s a clear visual of where improvement is needed. Another could be an **accuracy radar chart** by segment or by shooter – each axis is a shooting segment or shooter, and values are accuracy percentage. A team with one low axis clearly has a weakness. A **target hits vs misses timeline** might show in chronological order which targets were missed (spikes where multiple shots fired for one target). A clumped set of misses in one part indicates a trouble spot (maybe a particularly tricky target cluster). For driving, a small map of the course could highlight the path taken vs ideal path, or mark where any penalties occurred (e.g. a red X where a collision happened). Additionally, a **cumulative time comparison** line chart between Team Alpha and Team Beta could show how lead changes over course: e.g. Team Alpha ahead until second drive, then falls behind, etc. If analyzing multiple runs, a scatter plot of run times vs accuracy can show consistency: ideally all runs cluster in the low-time high-accuracy corner. PerformanceCharts for individuals might include something like a **reaction time histogram** for target appearance to shot fired. The variety of visual data – time bars, accuracy plots, maps – will give the team a clear, quick understanding of both macro (overall time/score) and micro (per target, per segment) performance. For instance, they could immediately see “Segment bars for Range A consistently bigger than competitor’s – that’s where we focus” or “We have a great accuracy radar except for one shooter who’s notably lower – let’s train them more or redistribute their targets.”

---

## Mobile Legends: Bang Bang  
### Core Gameplay Overview  
Mobile Legends: Bang Bang (MLBB) is a 5v5 mobile MOBA featuring two teams competing to destroy the enemy’s base (Core) located in each team’s base, connected by three lanes. Each player controls a single hero with unique abilities, fulfilling roles like Tank, Fighter, Assassin, Mage, Marksman, or Support. Teams push down lanes with waves of minions, and each lane has defensive turrets that must be destroyed before reaching the base. The gameplay is very fast-paced, with matches typically ~15-20 minutes. **Objective control** is key: teams often contest neutral objectives such as the **Turtle** (an early game boss that grants gold/exp) and **Lord** (a powerful late-game boss that, when defeated, marches to aid the team’s push) – these are analogous to Dragon/Baron in other MOBAs. Heroes gain gold and experience by farming minions, jungle monsters, and getting kills/assists, allowing them to buy items to get stronger. The competitive mode is generally a draft pick with bans, meaning teams strategically choose heroes to counter the opponent. MLBB emphasizes quick team fights and ganks – heroes have impactful ultimates that can initiate fights or deliver high burst damage. The controls are simplified for mobile (virtual joystick and ability buttons), but the game demands good coordination for **ganking (surprise attacking enemies in lane)**, **tower diving** (coordinated attacks under enemy turrets), and **protecting the Marksman** (primary damage dealer). Vision is provided by roaming and checking bushes since there are no wards, making map awareness and communication crucial. The win condition is to **destroy the enemy’s base** by breaking through at least one lane of turrets; often one decisive team fight in late game leads to a team wiping the opponent and then pushing for the victory. In summary, MLBB’s core gameplay is a distilled MOBA experience: fast leveling, item builds, 5v5 team fights, and objective management, all on mobile-friendly smaller maps, demanding strategic teamwork and sharp execution of hero skills.

### Player Performance KPIs (Ranked & Pro)  
- **Ranked KPIs:** In MLBB ranked play, players have **stars and ranks** from Warrior up to Mythic and Glorious Mythic. A basic KPI is the **rank (tier and stars)** itself. Within matches, **KDA (Kill/Death/Assist ratio)** is a primary performance indicator – for example, a player averaging 5/1/8 (5 kills, 1 death, 8 assists) is performing well with good contribution and low deaths. **Average Gold per Minute (GPM)** and **Experience per Minute (XPM)** are important for core roles; a high GPM means the player farms efficiently. **Hero damage dealt** and **damage taken** as percentages of team’s total help categorize their role impact (e.g. Tanks should have high damage taken, Marksmen high damage dealt). Another KPI is **Kill Participation** (what percentage of team kills the player was involved in), reflecting how much they contribute to team fights – supports and tanks often aim for very high participation ~70%+, carries might be slightly lower if split-pushing. **MVP rate** – how often the player earns MVP in ranked games – is a compound metric of performance (MLBB awards an MVP to the best player on each team using a score formula). **Objective stats**: e.g. number of turrets destroyed (split push contributions) and lords/turtles secured or assisted. For marksmen and mages, **DPM (Damage per Minute)** is a good KPI to compare output. For assassins, **average kills per game** and **first blood count** might be tracked. Supports might look at **healing or shielding** done if applicable. Also, since MLBB has a credit score and behavior rating, consistency and non-AFK (not abandoning games) could be a minor KPI.  
- **Pro KPIs:** In competitive MLBB, deeper analytics come in. **Teamfight engagement rate** – how often a player initiates or is first in a fight (crucial for tank/initiatior roles like an Atlas or Tigreal). **Crowd control uptime** – for example, how many seconds per game an enemy is stunned or slowed by the player’s actions, indicating effectiveness of their CC usage. **Damage share** and **Damage taken share** relative to team are looked at to ensure balance (e.g. a tank might take 40% of team’s damage, marksman deals 30% of team’s damage). **Farm share** – percentage of team’s total gold a player has (important to see if a hyper-carry strat is used where one hero takes big share of farm). **Objectives secured**: count of last-hits on Turtle/Lord by the player (if jungler, this is critical – a jungler with 80% objective secure is great). **Rotation efficiency** might be measured by something like “time to level 4” (since hitting ultimate level quickly is key for early ganks). **Vision contributions** in MLBB are intangible (no wards), but one could measure how often the player checks bushes or reveals enemies with skills – some teams track *“facechecks”* or scouting attempts. **Kill conversion rate**: how often does the team convert a kill into an objective like a turret or Lord? This can indicate shotcalling efficacy, though it’s teamwide. Another KPI: **Death consistency** – e.g. does the player avoid dying in crucial late-game moments? A stat might be “deaths in last 5 minutes of game” for carries, where 0 is ideal. Also important are **hero pool diversity** (number of different heroes played effectively in tournament) and **winrate on comfort picks**. In pro leagues they often track **hero-specific KDA or win rates** to highlight a player’s strongest picks. We could also consider **first tower time** if player is a split pusher – how quickly do they usually take the first turret. Lastly, in a ban/pick phase context, sometimes **predictability** is a KPI (like how often a team secures Turtle when their jungler is X hero – though that’s more team stat). Overall, pro KPIs emphasize teamfight impact, objective control, and consistency under pressure, along with the usual MOBA stats of farm, KDA, and damage.

### Scouting Insights & Skill Signals  
In MLBB, scouting a player means looking at their mechanics, decision-making, and team impact. **Mechanically**, a clear signal is how well they execute hero combos – e.g. a Chou player who can consistently pull off the flicker-ultimate kick to pick off enemies (showing mastery of animation cancels and timing). For marksmen, **kiting ability** (stutter-step attacking while moving) is a great signal – you can see it in how well they survive fights while outputting damage, measured by high damage dealt with low deaths. **Map awareness** is crucial: a player who rarely gets ganked unexpectedly (meaning they read the map well and back off in time) stands out; one can note how often they die to flank ganks vs how often they preemptively retreat – a low surprise death count is a signal of good awareness. **Positioning in team fights**: a good backline carry keeps just at max range, a good tank positions to soak skillshots for allies. Observers might literally draw positions – a scout could note, “This player always finds the flank angle to catch enemy marksman with Jawhead ejector, demonstrating great positioning and patience.” **Hero mastery**: does the player know the limits of their hero? For example, an Alucard diving 1v3 and coming out alive with kills indicates they judge their damage and lifesteal perfectly. On the flip side, overestimating and dying indicates poor limit testing. Another insight: **impact under pressure** – maybe the player consistently shines in late-game teamfights (clutch lord steals or triple kills), which signals strong nerves and decision-making when stakes are high. **Versatility** is also key: a scout looks if the player can play both early-game aggressive and late-game scaling heroes, or both assassin and tank junglers for example. If yes, they’re adaptable, a big plus. **Communication and leadership** may be inferred if, say, the team always seems to follow that player’s initiations or pings. Statistically, something like **high kill participation combined with low death count** is an ideal synergy signaling a team-oriented yet careful playstyle – for instance, a support with 80% KP and maybe 1–2 deaths in a game shows they are in every fight and seldom caught out. For a jungler, **objective control success** (like consistently gets last hit on objectives) indicates good timing and potentially mental fortitude to perform in high-pressure smite battles. **Consistency**: scouts love players who perform consistently across games, as opposed to one game godlike, next game feeding – a signal for consistency could be narrow variance in KDA or gold difference across matches. Intangibles like **team synergy** can be noted too: some players enable their teammates (like a support that always babysits the marksman to let them scale), which might not reflect in personal KDA but is visible in gameplay. In summary, key signals include: exceptional mechanics (fast reflexes, precise skill usage), intelligent macro choices (rotating for objectives, split-push vs group decisions), clutch plays in teamfights, and consistent positive impact (always contributing, rarely a liability).

### AI Integration Opportunities  
AI can enhance MLBB training on several fronts. **Replay analysis** is a big one: an AI system can automatically parse replays and identify moments like missed opportunities or positioning errors. For example, it can flag *“Death at 12:32 – occurred with no allied vision on 3 enemies, pushing too far alone”* as a teachable moment, essentially highlighting overextension. AI could use computer vision on the mini-map to detect if the player is not watching another lane where a gank is coming, then suggest improving map awareness. **Lane matchup training**: the AI could simulate different hero lane opponents (similar to how chess AIs simulate opponents) – e.g. you want to practice mid lane as a mage against a very aggressive assassin; the AI can control Zilong or Gusion to simulate that aggression, forcing the player to learn how to lane safely. **Aim and combo assistance**: although MLBB is not aim-intensive like FPS, skillshot accuracy can be trained. The AI could keep track of skillshot hit rates and create a practice mode where, say, as Pudge (Franco) you practice hooking moving targets generated by AI, with increasing difficulty. **Draft advice**: given a current meta and enemy picks, an AI could recommend hero picks or bans (for example, “Enemy picked a healing comp, consider picking anti-heal hero or buying Necklace of Durance early”). It might also suggest team comp improvements: *“You have 4 squishy heroes and no tank – this is risky, consider a durable frontliner.”* **In-game shotcalling via AI** is tricky, but perhaps suggestions like *“Turtle is spawning in 30s, rotate bottom”* or *“2 enemies are dead, push mid turret now”* – basically reminding or confirming macro calls. Another interesting integration: **predictive outcomes** – the AI can evaluate the game state (gold difference, tower count) and predict win probability. If it sees a downward trend, it might nudge the team *“Split push the side lane – teamfight odds are unfavorable right now.”* For mechanical improvement, an AI could track how fast a player casts spells after an enemy is in range or after a stun – to reduce reaction time. Also, **cooldown management**: maybe it notices the player often wastes ultimate on low-percentage plays; the AI could advise saving certain skills for specific situations (e.g. *“Your Atlas ult is most effective when at least 3 enemies are present; last fight you only caught 1 – consider waiting a bit longer or combo with Tigreal’s blink.”*). Another area: **item build optimization** – the AI can analyze enemy team (say heavy physical damage) and remind the player to build armor earlier or suggest an item like “Dominance Ice is highly effective against that lifesteal comp.” AI can also serve as a **sparring coach**: e.g. controlling a bot to repeatedly execute a common combo on the player (to practice escape or counter, like practicing timing Purify when Chou tries to kick you). Lastly, AI can be used to **scout opponents**: given data on another team, it might highlight patterns (e.g. *“Enemy jungler always ganks top at level 4 – be prepared.”*). Overall, AI can be coach, analyst, and training partner, covering both macro strategy and micro skills.

### Example Data Schema (Player & Match Data)  
```json
{
  "match_id": "MLBB_MPL_S9_GrandFinal_G5",
  "player": "XiaoPeng",
  "hero": "Ling",
  "role": "Assassin Jungler",
  "result": "Win",
  "lane": "Jungle",
  "stats": {
    "kills": 12,
    "deaths": 2,
    "assists": 8,
    "kda": 10.0,
    "gold": 15800,
    "gpm": 790,
    "damage_dealt": 98000,
    "damage_to_heroes": 75000,
    "damage_taken": 42000,
    "damage_to_turrets": 8000,
    "healing": 5000
  },
  "team_stats": {
    "kill_participation_pct": 80.0,
    "team_damage_pct": 30.5,
    "team_gold_pct": 28.0,
    "objective_participation": {
      "turtles_secured": 2,
      "lords_secured": 1,
      "towers_destroyed": 1
    }
  },
  "abilities": {
    "usage_count": {
      "tempest_of_blades": 8,  // ultimate
      "defiant_sword": 50,
      "finch_poise": 20
    },
    "hits": {
      "tempest_of_blades": 6,  // how many times ult hit enemies
      "defiant_sword": 120
    },
    "accuracy": {
      "defiant_sword": 0.85  // 85% of casts hit an enemy
    }
  },
  "items_build": ["Raptor Machete", "Endless Battle", "Blade of Despair", "Queens Wings", "Immortality", "Athena's Shield"],
  "positional_analysis": {
    "deaths_position": ["mid_lane_enemy_side", "lord_pit"],
    "average_time_in_enemy_jungle_pct": 0.30,
    "bush_checks": 15  // times entering bush to scout
  },
  "performance_rating": {
    "early_game": "S",
    "mid_game": "S+",
    "late_game": "A",
    "overall": "MVP"
  }
}
```  

This JSON represents an in-depth view of a single player’s performance in a match. It includes personal stats (K/D/A, gold, damage), share of team contributions (kill participation, damage%, etc.), ability usage and accuracy (how often they cast abilities and how effective they were), their item build, and some positional/contextual info like where they died and how much time they spent invading the enemy jungle. There’s also a simple performance rating section breaking their impact by phase of the game (early/mid/late) and an overall MVP tag. This rich schema would allow analysis on micro (ability accuracy, itemization) and macro (teamfight participation, objective control) levels for that player.

### Tailoring App Features  
- **StrategyRecommendation:** For MLBB, these might focus on macro decisions and hero-specific tips. For example: *“As a Jungler, prioritize securing the first Turtle at 2 minutes – you often gank a lane at turtle spawn and miss it. Coordinate with your team to rotate for Turtle on time.”* If the player’s team frequently loses the late game, the app could suggest *“In late game, focus on split pushing the opposite side when Lord is contested to apply pressure, since your teamfight is weaker.”* For hero-specific strategy: *“Ling’s strength is mobility – make sure to steal enemy blue buff to deny mana to their mage, you can invade early given Ling’s wall-climbing. Also, use Finch Poise to hang on walls near fights for energy regen and surprise entry.”* If the app notices the player not buying counter items, a tip could be *“The enemy has high HP regen – consider buying Sea Halberd to reduce their healing.”* Team comp suggestions could appear in draft mode: *“Your team lacks crowd control. If possible, pick a support like Khufra or Atlas to provide initiation.”* Or if the enemy drafted a strong dive comp: *“Protect your Marksman by sticking close and peeling with stuns; you may need to sacrifice offense to keep them alive.”* Basically, these recommendations bridge personal play and team strategy, teaching the player how to make decisions that align with high-level tactics and respond to specific game states (e.g. play safe until your power spike at 8min, then get aggressive).  
- **PlayerCard:** The PlayerCard for an MLBB player would highlight their main role and best heroes. It might list **Primary Role: Mage (Mid Lane)** and **Secondary: Support**, along with perhaps a badge for their highest rank (e.g. Mythical Glory). Their top 3 heroes could be displayed with win rates and average KDA (e.g. *“Kagura – 75% win (4.5 KDA), Vale – 65% win (3.8 KDA), Lunox – 60% win (4.0 KDA)”*). Key stats like **Average KDA**, **Kill Participation**, **GPM** can be shown. The card might also categorize their playstyle: e.g. *Aggressive Roamer* if they have high kill participation and spend a lot of time ganking. Possibly a radar chart with axes like Farming, Fighting, Surviving, Pushing, Supporting could be filled to give a quick attribute overview. If available, **MVP count** or **Average Team Rank Contribution** can show how often they carry games. Another interesting feature: a **hero pool depth** indicator (number of heroes they’ve played above a certain win rate or proficiency). For talent scouts, showing performance in tournaments vs ranked could be useful, but that may be too granular. The card could also show **Preferred Lane** (if they consistently play a certain lane). Overall, someone reading it should instantly glean this player’s specialization, strength and a bit of style – e.g. a high KDA, high damage share mage vs a low death, high assist support.  
- **AIInsights:** Post-match or post-series AI insights might say things like: *“When playing Marksman, your damage output before 10 minutes is 15% below top players – focus on better last-hitting and more aggressive laning when you have support.”* Or *“Your deaths often occur when you chase kills under enemy tower. In 3 of 5 deaths this match, you dived too deep. Consider holding back after winning a fight to push objectives instead of chasing another kill.”* It can also highlight positive trends: *“Excellent warding (vision) habits – though MLBB has no wards, you checked bush near Turtle 5 times, preventing ganks on your team.”* For macro: *“Team fight positioning: you were caught out of position in 2 key late-game fights. Try to stay behind your tank – e.g., in the final fight, you moved ahead of Tigreal and got CC’d. Maintain formation.”* If the AI notices itemization issues: *“Against a heavy magic damage team, you delayed building Athena’s Shield until very late. Consider getting it earlier – the damage taken chart shows magic burst was the cause of 2 of your deaths.”* The AI could also compare them to benchmarks: *“Your kill participation (50%) is lower than average for supports (65%). Try to rotate more and be present in engagements – your team might be fighting 4v5 without you at times.”* In essence, AIInsights serve as a personalized coach pointing out inefficiencies, mistakes, or underutilized opportunities, supported by data. It might also note patterns: *“You have a much higher win rate on early-game heroes. When you picked a late-game scaling hero in Game 3, the team struggled early. Perhaps stick to your strength in early aggression or ensure team comps that can protect you till late game.”* Such analysis helps the player align their hero choices and playstyle with what they excel at, or consciously improve their weaker aspects.  
- **PerformanceChart:** The app could show a **gold advantage timeline** for the match, highlighting when the player’s team was ahead or behind and marking key events (Turtle/Lord fights, teamfights won/lost). Another useful chart is **damage distribution per teamfight** – each major fight can be a stacked bar of damage dealt by each team member (to see contribution) or a pie of damage received by enemy from different sources (to see if focus fire was good). **Death map**: little skull icons on a mini-map showing where the player died each time, possibly revealing positioning issues (e.g. multiple deaths in enemy jungle might say over-aggression). A **XP progression graph** comparing the player’s level over time vs. their lane opponent’s level can reveal laning phase success. For multi-game analysis, a bar graph could show each game’s KDA or kill participation side by side, highlighting consistency or outliers. A **radar chart** could compare that game’s performance to their average – maybe axes like Aggressiveness (kills, damage), Safety (few deaths), Teamplay (assists, participation), Objective (towers, Lord/Turtle taken) etc. Another chart: **item build order vs time** – marking when each item was completed, showing power spikes. We could also visualize **cooldown usage**: e.g., timeline plotting when the player used their ultimate each time, perhaps color-coded for success (e.g. got a kill or assist vs wasted). Also a **vision map**: since MLBB doesn’t have wards, maybe heatmap of the player’s presence on the map – e.g., a support having heat across all lanes indicates roaming, whereas if it’s mostly one lane, maybe insufficient rotation. For a jungler, a heatmap might show jungle farming patterns. All these visual aids help the player see aspects like “Oh, I see on the gold graph we were ahead until mid game then threw – likely that one bad fight at Lord” or “My damage contribution in fights was low – the pie charts show the mage did most damage. I might need to position better or engage earlier.” In short, performance charts turn the raw numbers into intuitive visuals highlighting when and how the game swung, and what the player’s impact looked like throughout.

---

**Sources:** The above profiles synthesize official game descriptions and competitive insights from community and pro analysis. Key mechanics and format details of each title are referenced from official sources or news around the Asian Games esports events ([2026 Aichi-Nagoya Asian Games confirms 11 esports titles](https://www.esports.net/news/industry/2026-aichi-nagoya-asian-games-confirms-11-esports-titles/#:~:text=1,Mobile%20Legends%3A%20Bang%20Bang)) ([Street Fighter V - Wikipedia](https://en.wikipedia.org/wiki/Street_Fighter_V#:~:text=Street%20Fighter%20V%20carries%20on,75%20can%20parry%20an)) ([BACK TO THE PAST: Fighters unleashed - DAWN.COM](https://www.dawn.com/news/884414/back-to-the-past-fighters-unleashed#:~:text=,could%20end%20in%20six%20rounds)) ([PUBG Mobile Asian Games Version features Non-Violent Gameplay Rules](https://www.esports.net/news/mobile-games/pubg-mobile-asian-games-version-non-violent-gameplay/#:~:text=PUBG%20Mobile%20will%20feature%20a,to%20AESF%E2%80%99s%20no%20violence%20policy)) ([
		Pokémon UNITE Review | RPGFan		](https://www.rpgfan.com/review/pokemon-unite/#:~:text=The%20most%20notable%20unique%20feature,scored%20the%20most%20points%20wins)). Performance metrics and scouting points are informed by common analytical frameworks used in each game’s professional scene, as documented in coaching materials, esports statistics websites, and community discussions on effective play ([Kill to Death Ratio | League of Legends Wiki | Fandom](https://leagueoflegends.fandom.com/wiki/Kill_to_Death_Ratio#:~:text=The%20Kill%20Participation%20ratio%20,T%7D%7D%5Ccdot%20100)) ([Stats | Mobile Legends: Bang Bang Professional League MY](https://my-s8.mpl.mobilelegends.com/en/stats/#:~:text=LOGO%20TEAM%20PLAYER%20KILL%20DEATH,0%201%200%200%200)). These structured breakdowns aim to capture both the quantitative and qualitative aspects that define high-level play in each esports title, providing a foundation for tailored AI-driven training and analysis.